<%- include("header.ejs") %>

<div class="w-full text-center flex items-center justify-center gap-4">
    <a href="/" class="flex items-center gap-2">
        <img
            src="/images/logo.png"
            alt="Infinity Arcade"
            class="w-8 opacity-60"
        />
        <div
            href="/"
            class="bg-gradient-to-br from-white to-gray-400 text-transparent bg-clip-text text-center py-4 text-sm opacity-60 tracking-wider inline-block"
        >
            Infinity Arcade
        </div>
    </a>
    <% if (user) { %>
    <a
        href="/account"
        class="ml-2 bg-purple-500/80 hover:bg-purple-500 transition-colors text-white py-1 px-3 rounded-lg text-[10px] inline-block"
        >Account</a
    >
    <% } else { %>
    <a
        href="/pro"
        class="ml-2 bg-purple-500/80 hover:bg-purple-500 transition-colors text-white py-1 px-3 rounded-lg text-[10px] inline-block"
        >GO PRO!</a
    >
    <% } %>
</div>
<!-- -->
<% let i = 0 %>
<!-- -->
<% let num = games.length %>

<div
    class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 2xl:grid-cols-5 max-w-full mx-auto gap-8 md:gap-4 py-8 sm:px-4"
>
    <% for (const game of games) { %>
    <a
        href="/<%- game.slug %>"
        class="text-white flex flex-col bg-gray-900 rounded-xl shadow-lg transform hover:scale-105 transition-transform duration-200"
    >
        <div class="relative pb-10/16 rounded-xl">
            <img
                data-src="/api/game/<%- game.slug %>/art?size=256"
                alt="<%- game.title
            %>"
                style="visibility: hidden"
                class="h-full w-full rounded-t-xl lazy-load min-w-full"
            />
        </div>
        <div class="flex flex-col h-full gap-1 p-3">
            <div
                style="color: <%- game.primary_color %>"
                class="text-xl font-semibold truncate"
            >
                <%- game.title %>
            </div>
            <div class="text-gray-500 font-medium text-sm italic truncate">
                <%- game.genre %> <%- game.subgenre %>
            </div>
            <div class="text-sm font-bold mt-2"><%- game.tagline %></div>
        </div>
    </a>
    <% if (++i % 32 == 0 || i == num) { %>
    <a
        href="/generate"
        class="text-white p-4 flex flex-col gap-4 bg-gray-900 rounded-xl shadow-lg transform hover:scale-105 transition-transform duration-200 cursor-pointer"
    >
        <div
            class="relative pb-10/16 rounded-xl flex items-center justify-center bg-gray-800"
        ></div>
        <div
            class="flex flex-col h-full gap-1 justify-center items-center py-44"
        >
            <div class="text-xl font-semibold">Generate Game</div>
        </div>
    </a>
    <% } %> <% } %>
</div>
<a
    href="https://themaximalist.com"
    class="opacity-50 hover:opacity-100 transition-opacity"
>
    <img
        src="/images/themaximalist.png"
        id="themaximalist"
        class="mx-auto w-12 h-12 my-12"
        alt="The Maximalist"
    />
</a>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Get all images with the 'lazy-load' class
        const lazyImages = [].slice.call(
            document.querySelectorAll("img.lazy-load")
        );

        // Create an Intersection Observer instance
        const lazyImageObserver = new IntersectionObserver(function (
            entries,
            observer
        ) {
            entries.forEach(function (entry) {
                // If the image is in the viewport
                if (entry.isIntersecting) {
                    const lazyImage = entry.target;

                    // Set the 'src' attribute to the value of the 'data-src' attribute
                    lazyImage.src = lazyImage.dataset.src;

                    // Remove the 'lazy-load' class after the image has loaded
                    lazyImage.onload = function () {
                        lazyImage.style.visibility = "visible";
                        lazyImage.classList.remove("lazy-load");
                    };

                    // Unobserve the image to avoid further checks
                    observer.unobserve(lazyImage);
                }
            });
        });

        // Observe each image
        lazyImages.forEach(function (lazyImage) {
            lazyImageObserver.observe(lazyImage);
        });
    });
</script>
<%- include("footer.ejs") %>
